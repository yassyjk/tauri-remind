name: 'publish'

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm install -g typescript
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update && apt-get install -y locales && sed -i '/ja_JP.UTF-8/s/^# //g' /etc/locale.gen && locale-gen && update-locale LANG=ja_JP.UTF-8 LC_ALL=ja_JP.UTF-8 && echo "LANG=ja_JP.UTF-8" > /etc/default/locale && echo "LC_ALL=ja_JP.UTF-8" >> /etc/default/locale
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libappindicator3-dev librsvg2-dev patchelf libwebkit2gtk-4.1-dev libxdo-dev build-essential curl wget libssl-dev libayatana-appindicator3-dev sqlite3 libsqlite3-dev libjavascriptcoregtk-4.1-dev libsoup-3.0-dev
      - name: install frontend dependencies
        run: |
          yarn install # change this to npm or pnpm depending on which one you use
          yarn add react react-dom @types/react @types/react-dom @tauri-apps/api
      - name: build frontend
        run: ls && cat package.json && yarn build
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
